{{ if .Values.enabled }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  strategy:
    type: Recreate
  {{ if .Values.enableAntiAffinity }}
  affinity:
    # ensure postgres won't be on the same node as elasticsearch, pipelines or nginx
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - elasticsearch
            - pipelines
            - nginx
        topologyKey: "kubernetes.io/hostname"
  {{ end }}
  template:
    metadata:
      labels:
        app: postgres
    spec:
      {{ if .Values.nodeSelector }}
      nodeSelector:
        {{ .Values.nodeSelector }}
      {{ end }}
      {{ if .Values.kubeIpDnsUpdaterSecret }}
      serviceAccountName: {{ .Values.kubeIpDnsUpdaterServiceAccountName | quote }}
      initContainers:
      - name: dns
        image: orihoch/kube-ip-dns-updater:v0.0.9
        envFrom:
        - secretRef:
            name: {{ .Values.kubeIpDnsUpdaterSecret | quote }}
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      {{ end }}
      containers:
      - name: postgres
        image: {{ .Values.image | default "budgetkey/budgetkey-postgres:latest" | quote }}
        ports:
        - containerPort: 5432
          {{ if .Values.enableHostPort }}hostPort: 5432{{ end }}
        resources: {{ .Values.resources }}
        env:
        - name: POSTGRES_USER
          value: migdar
        - name: POSTGRES_DB
          value: migdar
        - name: POSTGRES_PASSWORD
        {{ if .Values.secretName }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName | quote }}
              key: POSTGRES_PASSWORD
        {{ else }}
          value: "123456"
        {{ end }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/db
          # postgres doesn't let you use the root of a disk (it complaints about having lost+found directory)
          subPath: data
      volumes:
      - name: data
      {{ if .Values.gcePersistentDiskName }}
        gcePersistentDisk:
          pdName: {{ .Values.gcePersistentDiskName | quote }}
      {{ else }}
        {{ .Values.global.persistentDataVolume.type }}: {
          {{ if eq .Values.global.persistentDataVolume.type "hostPath" }}
            "path": "{{ .Values.global.persistentDataVolume.basePath }}/postgres",
            "type": "DirectoryOrCreate"
          {{ end }}
        }
      {{ end }}
{{ end }}
